version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - npm install
  pre_build:
    commands:
      # Only deploy if relevant files changed (frontend-specific files)
      - |
        echo "Checking for file changes..."
        echo "Current commit: $CODEBUILD_RESOLVED_SOURCE_VERSION"
        
        # Ensure we have git history
        git fetch --unshallow 2>/dev/null || echo "Repository already complete"
        
        # Use CodeBuild environment variables or fallback to HEAD~1
        if [ -n "$CODEBUILD_RESOLVED_SOURCE_VERSION" ]; then
          CURRENT_COMMIT="$CODEBUILD_RESOLVED_SOURCE_VERSION"
          PREVIOUS_COMMIT=$(git rev-parse "$CODEBUILD_RESOLVED_SOURCE_VERSION~1" 2>/dev/null)
        else
          CURRENT_COMMIT="HEAD"
          PREVIOUS_COMMIT=$(git rev-parse "HEAD~1" 2>/dev/null)
        fi
        
        echo "Previous commit: $PREVIOUS_COMMIT"
        echo "Comparing $PREVIOUS_COMMIT to $CURRENT_COMMIT"
        
        # If we can't get previous commit, deploy anyway for safety
        if [ -z "$PREVIOUS_COMMIT" ]; then
          echo "DEPLOY=true" > deploy.flag
          echo "Cannot determine previous commit, deploying for safety"
        else
          CHANGED_FILES=$(git diff --name-only "$PREVIOUS_COMMIT" "$CURRENT_COMMIT" 2>/dev/null)
          echo "Changed files: $CHANGED_FILES"
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "DEPLOY=true" > deploy.flag
            echo "No changed files detected, deploying for safety"
          elif echo "$CHANGED_FILES" | grep -E '\.(tsx?|jsx?|html|css|json|yml)$|^src/|^public/|infrastructure\.yml|package\.json'; then
            echo "DEPLOY=true" > deploy.flag
            echo "Deployment triggered by relevant file changes"
          else
            echo "DEPLOY=false" > deploy.flag
            echo "No relevant frontend files changed, skipping deployment"
          fi
        fi
  build:
    commands:
      # Next.js build for static export
      - npm run build
  post_build:
    commands:
      - |
        if grep -q DEPLOY=true deploy.flag; then
          echo "Deploying Mercurio Rocket landing page..."
          
          # Deploy infrastructure
          aws cloudformation deploy \
            --template-file infrastructure.yml \
            --stack-name mercurio-rocket-prod \
            --parameter-overrides Environment=prod DomainName=mercuriohub.io \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset
          
          # Get S3 bucket name
          BUCKET_NAME=$(aws cloudformation describe-stacks \
            --stack-name mercurio-rocket-prod \
            --query 'Stacks[0].Outputs[?OutputKey==`S3BucketName`].OutputValue' \
            --output text)
          
          echo "Deploying to S3 bucket: $BUCKET_NAME"
          
          # Sync Next.js static export files to S3
          aws s3 sync out/ s3://$BUCKET_NAME/ \
            --delete \
            --cache-control "public, max-age=31536000" \
            --exclude "*.html" \
            --exclude "*.json" \
            --exclude "_next/data/*"
          
          # HTML files with shorter cache for better updates
          aws s3 sync out/ s3://$BUCKET_NAME/ \
            --delete \
            --cache-control "public, max-age=0, must-revalidate" \
            --exclude "*" \
            --include "*.html" \
            --include "*.json" \
            --include "_next/data/*"
          
          # Get CloudFront distribution ID and invalidate cache
          CLOUDFRONT_ID=$(aws cloudformation describe-stacks \
            --stack-name mercurio-rocket-prod \
            --query 'Stacks[0].Resources[?ResourceType==`AWS::CloudFront::Distribution`].PhysicalResourceId' \
            --output text)
          
          if [ -n "$CLOUDFRONT_ID" ]; then
            echo "Invalidating CloudFront cache for distribution: $CLOUDFRONT_ID"
            aws cloudfront create-invalidation \
              --distribution-id $CLOUDFRONT_ID \
              --paths "/*"
          fi
          
          echo "ðŸš€ Mercurio Rocket landing page deployment successful!"
          echo "Landing page will be available at: https://mercuriohub.io"
        else
          echo "Skipping deployment - no relevant files changed."
        fi
artifacts:
  files:
    - "**/*"